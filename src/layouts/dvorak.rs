use evdev::KeyCode as K;

pub fn resolve(key: &K) -> K {
    match *key {
        K::KEY_B => K::KEY_X,
        K::KEY_C => K::KEY_J,
        K::KEY_D => K::KEY_E,
        K::KEY_E => K::KEY_DOT,
        K::KEY_F => K::KEY_U,
        K::KEY_G => K::KEY_I,
        K::KEY_H => K::KEY_D,
        K::KEY_I => K::KEY_C,
        K::KEY_J => K::KEY_H,
        K::KEY_K => K::KEY_T,
        K::KEY_L => K::KEY_N,
        K::KEY_N => K::KEY_B,
        K::KEY_O => K::KEY_R,
        K::KEY_P => K::KEY_L,
        K::KEY_Q => K::KEY_APOSTROPHE,
        K::KEY_R => K::KEY_P,
        K::KEY_S => K::KEY_O,
        K::KEY_T => K::KEY_Y,
        K::KEY_U => K::KEY_G,
        K::KEY_V => K::KEY_K,
        K::KEY_W => K::KEY_COMMA,
        K::KEY_X => K::KEY_Q,
        K::KEY_Y => K::KEY_F,
        K::KEY_Z => K::KEY_SEMICOLON,
        K::KEY_MINUS => K::KEY_LEFTBRACE,
        K::KEY_EQUAL => K::KEY_RIGHTBRACE,
        K::KEY_LEFTBRACE => K::KEY_SLASH,
        K::KEY_RIGHTBRACE => K::KEY_EQUAL,
        K::KEY_SEMICOLON => K::KEY_S,
        K::KEY_APOSTROPHE => K::KEY_MINUS,
        K::KEY_COMMA => K::KEY_W,
        K::KEY_DOT => K::KEY_V,
        K::KEY_SLASH => K::KEY_Z,
        _ => *key,
    }
}

pub fn resolve_reverse(key: &K) -> K {
    match *key {
        K::KEY_X => K::KEY_B,
        K::KEY_J => K::KEY_C,
        K::KEY_E => K::KEY_D,
        K::KEY_DOT => K::KEY_E,
        K::KEY_U => K::KEY_F,
        K::KEY_I => K::KEY_G,
        K::KEY_D => K::KEY_H,
        K::KEY_C => K::KEY_I,
        K::KEY_H => K::KEY_J,
        K::KEY_T => K::KEY_K,
        K::KEY_N => K::KEY_L,
        K::KEY_B => K::KEY_N,
        K::KEY_R => K::KEY_O,
        K::KEY_L => K::KEY_P,
        K::KEY_APOSTROPHE => K::KEY_Q,
        K::KEY_P => K::KEY_R,
        K::KEY_O => K::KEY_S,
        K::KEY_Y => K::KEY_T,
        K::KEY_G => K::KEY_U,
        K::KEY_K => K::KEY_V,
        K::KEY_COMMA => K::KEY_W,
        K::KEY_Q => K::KEY_X,
        K::KEY_F => K::KEY_Y,
        K::KEY_SEMICOLON => K::KEY_Z,
        K::KEY_LEFTBRACE => K::KEY_MINUS,
        K::KEY_RIGHTBRACE => K::KEY_EQUAL,
        K::KEY_SLASH => K::KEY_LEFTBRACE,
        K::KEY_EQUAL => K::KEY_RIGHTBRACE,
        K::KEY_S => K::KEY_SEMICOLON,
        K::KEY_MINUS => K::KEY_APOSTROPHE,
        K::KEY_W => K::KEY_COMMA,
        K::KEY_V => K::KEY_DOT,
        K::KEY_Z => K::KEY_SLASH,
        _ => *key,
    }
}
